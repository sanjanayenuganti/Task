name: Deploy NGINX to ECS

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch (adjust as needed)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up AWS credentials (GitHub Secrets)
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:latest .

    # Step 5: Push the Docker image to ECR
    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

    # Step 6: Update ECS service with the new image
    - name: Update ECS service
      run: |
        # Update ECS service with the new task definition
        aws ecs update-service \
          --cluster my-ecs-cluster \
          --service my-ecs-service \
          --task-definition nginx-task \
          --force-new-deployment
